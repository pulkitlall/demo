<?xml version='1.0' encoding='UTF-8'?>
<matrix-project plugin="matrix-project@1.4.1">
  <actions/>
  <description>Builds the libCURL library in two flavous, static (/MT) and dll (/MD) using the VS 2013 (v120), VS 2012 (v110) and VS 2010 (v100). It also builds the debug and release versions of the libraries.</description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>5</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.security.AuthorizationMatrixProperty>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Update:msingh</permission>
      <permission>hudson.model.Run.Delete:msingh</permission>
      <permission>hudson.model.Item.Workspace:msingh</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Delete:msingh</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.ManageDomains:msingh</permission>
      <permission>hudson.model.Item.Configure:msingh</permission>
      <permission>hudson.model.Item.Cancel:msingh</permission>
      <permission>hudson.model.Item.Delete:msingh</permission>
      <permission>hudson.model.Item.Read:anonymous</permission>
      <permission>hudson.model.Item.Read:msingh</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.View:msingh</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Create:msingh</permission>
      <permission>hudson.model.Item.Build:msingh</permission>
      <permission>hudson.scm.SCM.Tag:msingh</permission>
      <permission>hudson.model.Item.Discover:msingh</permission>
      <permission>hudson.model.Run.Update:msingh</permission>
    </hudson.security.AuthorizationMatrixProperty>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.6">
      <useBuildBlocker>false</useBuildBlocker>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <jenkins.plugins.jobicon.CustomIconProperty plugin="custom-job-icon@0.2">
      <iconfile>e0edb1c499dca1ca124e5debe700555d7d3370bf.png</iconfile>
    </jenkins.plugins.jobicon.CustomIconProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <com.seitenbau.jenkins.plugins.dynamicparameter.scriptler.ScriptlerChoiceParameterDefinition plugin="dynamicparameter@0.2.0">
          <name>CURL_VERSION</name>
          <description>Version of curl</description>
          <__uuid>93712d0f-d922-457c-b79d-6205d0d0dfb6</__uuid>
          <__remote>false</__remote>
          <__scriptlerScriptId>Listfile.gsh.groovy</__scriptlerScriptId>
          <__parameters>
            <com.seitenbau.jenkins.plugins.dynamicparameter.scriptler.ScriptlerParameterDefinition_-ScriptParameter>
              <name>Folder</name>
              <value>cURL</value>
            </com.seitenbau.jenkins.plugins.dynamicparameter.scriptler.ScriptlerParameterDefinition_-ScriptParameter>
          </__parameters>
          <readonlyInputField>false</readonlyInputField>
        </com.seitenbau.jenkins.plugins.dynamicparameter.scriptler.ScriptlerChoiceParameterDefinition>
        <hudson.plugins.copyartifact.BuildSelectorParameter plugin="copyartifact@1.35">
          <name>BUILD_SELECTOR_OPENSSL</name>
          <description></description>
          <defaultSelector class="hudson.plugins.copyartifact.TriggeredBuildSelector">
            <fallbackToLastSuccessful>true</fallbackToLastSuccessful>
            <upstreamFilterStrategy>UseGlobalSetting</upstreamFilterStrategy>
          </defaultSelector>
        </hudson.plugins.copyartifact.BuildSelectorParameter>
        <hudson.model.BooleanParameterDefinition>
          <name>USE_OPENSSL</name>
          <description>Builds libcurl with OpenSSL support</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.plugins.matrix__configuration__parameter.MatrixCombinationsParameterDefinition plugin="matrix-combinations-parameter@1.0.7">
          <name>BUILD_MATRIX</name>
          <description>&lt;!DOCTYPE html&gt;
&lt;html&gt;
	&lt;head&gt;
		&lt;style&gt;
			hr { 
				display: block;
				margin-top: 0.5em;
				margin-bottom: 0.5em;
				margin-left: auto;
				margin-right: auto;
				border-style: inset;
				border-width: 1px;
			} 
		&lt;/style&gt;
	&lt;/head&gt;
	&lt;body&gt;
		&lt;p&gt;
			&lt;b&gt;x86, amd64&lt;/b&gt;: Target platforms
		&lt;/p&gt;
		&lt;hr&gt;
		&lt;p&gt;
			&lt;b&gt;v120, v110, v100&lt;/b&gt;: The Platform toolset to be used for building the xerces sources. Corresponds to VS 2013, 2012 and 2010 respectively, matches to the $(PlatformToolset) macro in Visual Studio.
		&lt;/p&gt;
		&lt;hr&gt;
		&lt;p&gt;
			&lt;b&gt;release, debug&lt;/b&gt;: Configurations that are built. Corresponds to the macro $(Configuration) in Visual Studio. The Static ones use the /MT compiler switch and the non static ones use the /MD switches for linking to the MSVCRT.
		&lt;/p&gt;
		&lt;p&gt;
			&lt;b&gt;static, dll&lt;/b&gt;: Library type to generate. static: uses the /MT switch and dll uses the /MD switche for linking to the MSVCRT.
		&lt;/p&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
        </hudson.plugins.matrix__configuration__parameter.MatrixCombinationsParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <org.jenkinsci.plugins.customizebuildnow.BuildNowTextProperty plugin="customize-build-now@1.0"/>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.22">
      <autoRebuild>false</autoRebuild>
    </com.sonyericsson.rebuild.RebuildSettings>
    <org.jenkinsci.plugins.requeuejob.RequeueJobProperty plugin="jobrequeue@1.0">
      <requeueJob>false</requeueJob>
    </org.jenkinsci.plugins.requeuejob.RequeueJobProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@1.8.4">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <matrixOptions>
        <throttleMatrixBuilds>true</throttleMatrixBuilds>
        <throttleMatrixConfigurations>false</throttleMatrixConfigurations>
      </matrixOptions>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <EnvInjectJobProperty plugin="envinject@1.91.2">
      <info>
        <groovyScriptContent>// ****************************************************************************************************
// Copyright (c) 2015 Advanced Micro Devices, Inc. All rights reserved.

import java.lang.String;

//Dump the environment variables
def map = [:];

map.put( &quot;ARCHIVE_EXTENSION&quot;, &quot;7z&quot; );

if( JOB_NAME.contains( &quot;x86&quot; ) ) {
	map.put( &quot;PLATFORM_ARCH_VS&quot;, &quot;Win32&quot; );
}

if( JOB_NAME.contains( &quot;amd64&quot; ) ) {
	map.put( &quot;PLATFORM_ARCH_VS&quot;, &quot;x64&quot; );
}

if( JOB_NAME.contains( &quot;release&quot; ) ) {
	map.put( &quot;C_CAPS&quot;, &quot;Release&quot; );
}

if( JOB_NAME.contains( &quot;debug&quot; ) ) {
	map.put( &quot;C_CAPS&quot;, &quot;Debug&quot; );
}

def MODE=&quot;static&quot;;
if( JOB_NAME.contains( &quot;dll&quot; ) ) {
	MODE=&quot;shared&quot;;
}

if ( JOB_NAME.contains( &quot;v120&quot; ) ) {
	map.put( &quot;VSKEY&quot;, &quot;12.0&quot; );
	map.put( &quot;VC&quot;, &quot;12&quot; );
}

if ( JOB_NAME.contains( &quot;v110&quot; ) ) {
	map.put( &quot;VSKEY&quot;, &quot;11.0&quot; );
	map.put( &quot;VC&quot;, &quot;11&quot; );
}

if ( JOB_NAME.contains( &quot;v100&quot; ) ) {
	map.put( &quot;VSKEY&quot;, &quot;10.0&quot; );
	map.put( &quot;VC&quot;, &quot;10&quot; );
}

map.put( &quot;MODE&quot;, MODE );
map.put( &quot;J&quot;, &quot;1.8&quot; );

println &apos;-------------------------------------&apos;
println &apos;JOB_NAME: &apos; + JOB_NAME;
println &apos;Evnironment Variables Added: &apos; + map;
println &apos;-------------------------------------&apos;

return map;</groovyScriptContent>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
      <contributors/>
    </EnvInjectJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>WBM</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <axes>
    <hudson.matrix.TextAxis>
      <name>T</name>
      <values>
        <string>v120</string>
        <string>v110</string>
        <string>v100</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.TextAxis>
      <name>M</name>
      <values>
        <string>static</string>
        <string>dll</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.TextAxis>
      <name>C</name>
      <values>
        <string>release</string>
        <string>debug</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.TextAxis>
      <name>P</name>
      <values>
        <string>x86</string>
        <string>amd64</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.LabelAxis>
      <name>L</name>
      <values>
        <string>WBM</string>
      </values>
    </hudson.matrix.LabelAxis>
  </axes>
  <builders>
    <hudson.tasks.BatchFile>
      <command>@echo off&#xd;
&#xd;
setlocal&#xd;
&#xd;
echo P: %P%&#xd;
echo J: %J%&#xd;
echo T: %T%&#xd;
&#xd;
if EXIST Environ.bat (&#xd;
	call Environ.bat&#xd;
) else (&#xd;
	echo [ERR]File Environ.bat not copied from Jenkins&apos; userContent directory.&#xd;
	exit /b 1&#xd;
)&#xd;
&#xd;
endlocal</command>
    </hudson.tasks.BatchFile>
    <EnvInjectBuilder plugin="envinject@1.91.2">
      <info>
        <propertiesFilePath>${WORKSPACE}\Environ.props</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.3">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.BooleanCondition" plugin="run-condition@1.0">
        <token>${USE_OPENSSL}</token>
      </runCondition>
      <conditionalbuilders>
        <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.35">
          <project>OpenSSL/C=${C_CAPS},L=WBM,M=${MODE},P=${PLATFORM_ARCH_VS},T=${T}/</project>
          <filter>openssl-${PLATFORM_ARCH_VS}-${C_CAPS}-${T}-*.${ARCHIVE_EXTENSION}</filter>
          <target></target>
          <excludes></excludes>
          <selector class="hudson.plugins.copyartifact.ParameterizedBuildSelector">
            <parameterName>BUILD_SELECTOR_OPENSSL</parameterName>
          </selector>
          <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
        </hudson.plugins.copyartifact.CopyArtifact>
        <hudson.tasks.BatchFile>
          <command>@echo off&#xd;
&#xd;
::- This script extracts the OpenSSL archives&#xd;
::- Curl&#xd;
setlocal&#xd;
&#xd;
echo [INFO]SEVENZ: %SEVENZ%&#xd;
&#xd;
::- Extract the openssl archive to the openssl folder&#xd;
set DEP_DIR=%WORKSPACE%\deps&#xd;
if NOT EXIST &quot;%DEP_DIR%&quot; (&#xd;
	mkdir &quot;%DEP_DIR%&quot;&#xd;
)&#xd;
&#xd;
echo [INFO]Calling: %SEVENZ% x -aoa openssl-%PLATFORM_ARCH_VS%-%C_CAPS%-%T%-*.%ARCHIVE_EXTENSION% -o&quot;%DEP_DIR%&quot;&#xd;
%SEVENZ% x -aoa openssl-%PLATFORM_ARCH_VS%-%C_CAPS%-%T%-*.%ARCHIVE_EXTENSION% -o&quot;%DEP_DIR%&quot;&#xd;
if NOT ERRORLEVEL 0 (&#xd;
	echo [ERR]Failed to extract openssl-%PLATFORM_ARCH_VS%-%C_CAPS%-%T%-*.%ARCHIVE_EXTENSION%&#xd;
	exit /b ERRORLEVEL&#xd;
)&#xd;
&#xd;
endlocal&#xd;
</command>
        </hudson.tasks.BatchFile>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
    <hudson.tasks.BatchFile>
      <command>@echo off&#xd;
&#xd;
::- This script calls the appropriate vcvarsall.bat and then calls the nmake to build &#xd;
::- Curl&#xd;
setlocal&#xd;
&#xd;
echo [INFO]SEVENZ: %SEVENZ%&#xd;
echo [INFO]CURL_VERSION: %CURL_VERSION%&#xd;
&#xd;
::- Extract the curl sources&#xd;
echo [INFO]Calling: %SEVENZ% x -so cURL\%CURL_VERSION%\curl-%CURL_VERSION%.tar.bz2 ^| %SEVENZ% x -aoa -si -ttar -xr!docs -xr!tests -o&quot;%WORKSPACE%&quot;&#xd;
%SEVENZ% x -so cURL\%CURL_VERSION%\curl-%CURL_VERSION%.tar.bz2 | %SEVENZ% x -aoa -si -ttar -xr!docs -xr!tests -o&quot;%WORKSPACE%&quot;&#xd;
if NOT ERRORLEVEL 0 (&#xd;
	echo [ERR]Failed to extract cURL\%CURL_VERSION%\curl-%CURL_VERSION%.tar.bz2&#xd;
	exit /b ERRORLEVEL&#xd;
)&#xd;
&#xd;
set VCVARSALL=%MSVC.DIR%VC\vcvarsall.bat&#xd;
echo [INFO]VCVARSALL: %VCVARSALL%&#xd;
&#xd;
::- Now based on the target machine, we need to call the appropriate vcvarsall.bat&#xd;
set VS_ARCH=&#xd;
set ARCH=&#xd;
set MACHINE=&#xd;
if &quot;%P%&quot;==&quot;x86&quot; (&#xd;
	echo [INFO] Building 32-bit Curl&#xd;
	set ARCH=x86&#xd;
	set MACHINE=x86&#xd;
	set VS_ARCH=Win32&#xd;
) else (&#xd;
	echo [INFO] Building 64-bit Curl&#xd;
	::-It is amd64&#xd;
	::-Now check the PROCESSOR_ARCHITECTURE&#xd;
	if &quot;%PROCESSOR_ARCHITECTURE%&quot;==&quot;x86&quot; (&#xd;
		::32-bit OS&#xd;
		set ARCH=x86_amd64&#xd;
	) else (&#xd;
		::64-bit OS&#xd;
		set ARCH=amd64&#xd;
	)&#xd;
	set MACHINE=x64&#xd;
	set VS_ARCH=x64&#xd;
)&#xd;
&#xd;
echo [INFO] ARCH: %ARCH%; MACHINE: %MACHINE%&#xd;
&#xd;
set DEBUG=yes&#xd;
if &quot;%C%&quot;==&quot;release&quot; (&#xd;
	set DEBUG=no&#xd;
)&#xd;
echo [INFO]DEBUG: %DEBUG%&#xd;
echo [INFO]Calling &quot;%VCVARSALL%&quot; %ARCH%&#xd;
call &quot;%VCVARSALL%&quot; %ARCH%&#xd;
&#xd;
if &quot;%M%&quot;==&quot;static&quot; (&#xd;
	echo [INFO] Setting to build static with /MT switches rather than the /MD static library&#xd;
	set RTLIBCFG=static&#xd;
)&#xd;
&#xd;
set OUTPUTDIR=curl-%CURL_VERSION%\builds\libcurl-vc%VC%-%MACHINE%-%C%-%M%-ipv6-sspi-winssl&#xd;
pushd %WORKSPACE%\curl-%CURL_VERSION%\winbuild&#xd;
	if defined USE_OPENSSL (&#xd;
		if &quot;%USE_OPENSSL%&quot;==&quot;true&quot; (&#xd;
			set OUTPUTDIR=curl-%CURL_VERSION%\builds\libcurl-vc%VC%-%MACHINE%-%C%-%M%-ssl-%M%-ipv6-sspi&#xd;
			echo [INFO]Building libCURL with OpenSSL&#xd;
			echo [INFO]Calling nmake /f Makefile.vc mode=%M% VC=%VC% GEN_PDB=yes DEBUG=%DEBUG% MACHINE=%MACHINE% WITH_SSL=%M%&#xd;
			nmake /f Makefile.vc mode=%M% VC=%VC% GEN_PDB=yes DEBUG=%DEBUG% MACHINE=%MACHINE% WITH_SSL=%M%&#xd;
			&#xd;
		) else (&#xd;
			echo [INFO]Building libCURL without OpenSSL&#xd;
			echo [INFO]Calling nmake /f Makefile.vc mode=%M% VC=%VC% GEN_PDB=yes DEBUG=%DEBUG% MACHINE=%MACHINE%&#xd;
			nmake /f Makefile.vc mode=%M% VC=%VC% GEN_PDB=yes DEBUG=%DEBUG% MACHINE=%MACHINE%&#xd;
		)&#xd;
	) else (&#xd;
		echo [INFO]Building libCURL without OpenSSL&#xd;
		echo [INFO]Calling nmake /f Makefile.vc mode=%M% VC=%VC% GEN_PDB=yes DEBUG=%DEBUG% MACHINE=%MACHINE%&#xd;
		nmake /f Makefile.vc mode=%M% VC=%VC% GEN_PDB=yes DEBUG=%DEBUG% MACHINE=%MACHINE%&#xd;
	)&#xd;
	&#xd;
	if ERRORLEVEL 1 (&#xd;
		exit /b ERRORLEVEL&#xd;
	)&#xd;
popd&#xd;
&#xd;
if NOT EXIST %OUTPUTDIR% (&#xd;
	echo [ERR]The output directory %OUTPUTDIR% does not exist. Incorrect directory? or build failed. Check.&#xd;
	exit /b 1&#xd;
)&#xd;
&#xd;
:: libcurl-vc12-x86-release-dll-ssl-dll-ipv6-sspi&#xd;
echo [INFO]Creating the artifact&#xd;
pushd %OUTPUTDIR%&#xd;
	::- Build completed successfully&#xd;
	::- Now we move the libs and bin to appropriate named directory&#xd;
	if NOT EXIST bin\%VS_ARCH%\%T%\%C% (&#xd;
		mkdir bin\%VS_ARCH%\%T%\%C%&#xd;
	)&#xd;
	&#xd;
	move /Y bin\*.* bin\%VS_ARCH%\%T%\%C%&#xd;
	&#xd;
	if NOT EXIST lib\%VS_ARCH%\%T%\%C% (&#xd;
		mkdir lib\%VS_ARCH%\%T%\%C%&#xd;
	)&#xd;
	&#xd;
	move /Y lib\*.* lib\%VS_ARCH%\%T%\%C%&#xd;
	&#xd;
	%SEVENZ% a -t7z %WORKSPACE%\libcurl-%CURL_VERSION%.%BUILD_NUMBER%-%T%-%P%-%C%-%M%.7z .\*&#xd;
popd&#xd;
endlocal&#xd;
</command>
    </hudson.tasks.BatchFile>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>libcurl-$CURL_VERSION.$BUILD_NUMBER-$T-$P-$C-$M.7z</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.25">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.6"/>
    <com.michelin.cio.hudson.plugins.copytoslave.CopyToSlaveBuildWrapper plugin="copy-to-slave@1.4.4">
      <includes>cURL/${CURL_VERSION}/curl-${CURL_VERSION}.tar.bz2,Environ.bat</includes>
      <excludes></excludes>
      <flatten>false</flatten>
      <includeAntExcludes>false</includeAntExcludes>
      <hudsonHomeRelative>false</hudsonHomeRelative>
      <relativeTo>userContent</relativeTo>
    </com.michelin.cio.hudson.plugins.copytoslave.CopyToSlaveBuildWrapper>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@1.3">
      <template>${ENV,var=&quot;CURL_VERSION&quot;}.${BUILD_NUMBER}</template>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
  <executionStrategy class="hudson.matrix.DefaultMatrixExecutionStrategyImpl">
    <runSequentially>false</runSequentially>
    <sorter class="hudson.matrix.NoopMatrixConfigurationSorter"/>
  </executionStrategy>
</matrix-project>