<?xml version='1.0' encoding='UTF-8'?>
<matrix-project plugin="matrix-project@1.6">
  <actions/>
  <description>Builds OpenCL Release and Debug configurations for Windows and Linux</description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>5</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.security.AuthorizationMatrixProperty>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Update:kumarrav</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Update:prangana</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Update:msingh</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Update:nshigiha</permission>
      <permission>hudson.model.Run.Delete:msingh</permission>
      <permission>hudson.model.Item.Workspace:kumarrav</permission>
      <permission>hudson.model.Item.Workspace:kknox</permission>
      <permission>hudson.model.Item.Workspace:prangana</permission>
      <permission>hudson.model.Item.Workspace:msingh</permission>
      <permission>hudson.model.Item.Workspace:nshigiha</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Delete:msingh</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.ManageDomains:prangana</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.ManageDomains:msingh</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.ManageDomains:nshigiha</permission>
      <permission>hudson.model.Item.Configure:msingh</permission>
      <permission>hudson.model.Item.Cancel:kumarrav</permission>
      <permission>hudson.model.Item.Cancel:kknox</permission>
      <permission>hudson.model.Item.Cancel:prangana</permission>
      <permission>hudson.model.Item.Cancel:msingh</permission>
      <permission>hudson.model.Item.Cancel:nshigiha</permission>
      <permission>hudson.model.Item.Read:kumarrav</permission>
      <permission>hudson.model.Item.Read:kknox</permission>
      <permission>hudson.model.Item.Read:prangana</permission>
      <permission>hudson.model.Item.Read:anonymous</permission>
      <permission>hudson.model.Item.Read:msingh</permission>
      <permission>hudson.model.Item.Read:nshigiha</permission>
      <permission>hudson.model.Item.Delete:msingh</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.View:kumarrav</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.View:kknox</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.View:prangana</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.View:msingh</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.View:nshigiha</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Create:msingh</permission>
      <permission>hudson.model.Item.Build:kumarrav</permission>
      <permission>hudson.model.Item.Build:prangana</permission>
      <permission>hudson.model.Item.Build:msingh</permission>
      <permission>hudson.model.Item.Build:nshigiha</permission>
      <permission>hudson.scm.SCM.Tag:kumarrav</permission>
      <permission>hudson.scm.SCM.Tag:kknox</permission>
      <permission>hudson.scm.SCM.Tag:prangana</permission>
      <permission>hudson.scm.SCM.Tag:msingh</permission>
      <permission>hudson.scm.SCM.Tag:nshigiha</permission>
      <permission>hudson.model.Item.Discover:kumarrav</permission>
      <permission>hudson.model.Item.Discover:kknox</permission>
      <permission>hudson.model.Item.Discover:prangana</permission>
      <permission>hudson.model.Item.Discover:msingh</permission>
      <permission>hudson.model.Item.Discover:nshigiha</permission>
      <permission>hudson.model.Run.Update:kumarrav</permission>
      <permission>hudson.model.Run.Update:kknox</permission>
      <permission>hudson.model.Run.Update:prangana</permission>
      <permission>hudson.model.Run.Update:msingh</permission>
      <permission>hudson.model.Run.Update:nshigiha</permission>
    </hudson.security.AuthorizationMatrixProperty>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.1">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>UNDEFINED</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <jenkins.plugins.jobicon.CustomIconProperty plugin="custom-job-icon@0.2">
      <iconfile>79194b38ccf25de20ff4d6321e82a2c86c86f562.png</iconfile>
    </jenkins.plugins.jobicon.CustomIconProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>DriverVersion</name>
          <description></description>
          <defaultValue>14.501</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MAJOR_NUMBER</name>
          <description></description>
          <defaultValue>2</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MINOR_NUMBER</name>
          <description></description>
          <defaultValue>0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.plugins.matrix__configuration__parameter.MatrixCombinationsParameterDefinition plugin="matrix-combinations-parameter@1.0.9">
          <name>BUILD_MATRIX</name>
          <description></description>
        </hudson.plugins.matrix__configuration__parameter.MatrixCombinationsParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <org.jenkinsci.plugins.customizebuildnow.BuildNowTextProperty plugin="customize-build-now@1.0"/>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <org.jenkinsci.plugins.requeuejob.RequeueJobProperty plugin="jobrequeue@1.0">
      <requeueJob>true</requeueJob>
    </org.jenkinsci.plugins.requeuejob.RequeueJobProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@1.8.4">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <matrixOptions>
        <throttleMatrixBuilds>true</throttleMatrixBuilds>
        <throttleMatrixConfigurations>false</throttleMatrixConfigurations>
      </matrixOptions>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <EnvInjectJobProperty plugin="envinject@1.91.4">
      <info>
        <groovyScriptContent>// ****************************************************************************************************
// Copyright (c) 2015 Advanced Micro Devices, Inc. All rights reserved.

import java.lang.String;

//Dump the environment variables
def map = [:];

String strCustomWorkspace = JENKINS_HOME + &quot;/workspace/OpenCL-Parent&quot;;

//JOB_NAME: OpenCL/C=rel,P=x86,label=WBM_amd64
if( JOB_NAME.contains( &quot;WBM_amd64&quot; ) ) {
	if( JOB_NAME.contains( &quot;x86&quot; ) ) {
		map.put( &quot;OPENCL_PLATFORM&quot;, &quot;w8&quot; );
	}
	else if( JOB_NAME.contains( &quot;amd64&quot; ) ) {
		map.put( &quot;OPENCL_PLATFORM&quot;, &quot;w864a.64only&quot; );
	}
	else {
		println &quot;Should not come here&quot;
	}

	if( JOB_NAME.contains( &quot;dbg&quot; ) ) {
		map.put( &quot;CONFIGURATION&quot;, &quot;debug&quot; );
	}

	if( JOB_NAME.contains( &quot;rel&quot; ) ) {
		map.put( &quot;CONFIGURATION&quot;, &quot;release&quot; );
	}
	
	map.put( &quot;J&quot;, &quot;1.8&quot; );
	map.put( &quot;T&quot;, &quot;v110&quot; );
	map.put( &quot;FILES_TO_COPY&quot;, &quot;*.bat&quot; );
	map.put( &quot;ARCHIVE_EXTENSION&quot;, &quot;7z&quot; );
	//Custom workspace is needed in Windows as it needs a smaller directory
	strCustomWorkspace = SystemDrive + &quot;\\OCL&quot;;
}

if( JOB_NAME.contains( &quot;LBM&quot; ) ) {
	map.put( &quot;T&quot;, &quot;gcc473&quot; );
	map.put( &quot;FILES_TO_COPY&quot;, &quot;*.sh&quot; );
	map.put( &quot;OPENCL_DK_SHARE_NAME&quot;, &quot;OpenCL_DK_linux&quot; );
	map.put( &quot;ARCHIVE_EXTENSION&quot;, &quot;tar.bz2&quot; );
    strCustomWorkspace = JENKINS_HOME + &quot;/workspace&quot;;
	
	if( JOB_NAME.contains( &quot;x86&quot; ) ) {
		map.put( &quot;OPENCL_PLATFORM&quot;, &quot;lnx&quot; );
	}

	if( JOB_NAME.contains( &quot;amd64&quot; ) ) {
		map.put( &quot;OPENCL_PLATFORM&quot;, &quot;lnx64a.64only&quot; );
	}

	if( JOB_NAME.contains( &quot;dbg&quot; ) ) {
		map.put( &quot;CONFIGURATION&quot;, &quot;debug&quot; );
	}

	if( JOB_NAME.contains( &quot;rel&quot; ) ) {
		map.put( &quot;CONFIGURATION&quot;, &quot;release&quot; );
	}
}

map.put( &quot;PRODUCTVERSION&quot;, MAJOR_NUMBER + &quot;.&quot; + MINOR_NUMBER + &quot;-&quot; + DriverVersion + &quot;-&quot; + BUILD_NUMBER );
map.put( &quot;CUSTOM_WORKSPACE&quot;, strCustomWorkspace );

println &apos;-------------------------------------&apos;
println &apos;Evnironment Variables Added: &apos; + map;
println &apos;JOB_NAME: &apos; + JOB_NAME;
println &apos;-------------------------------------&apos;

return map;</groovyScriptContent>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
      <contributors/>
    </EnvInjectJobProperty>
  </properties>
  <scm class="hudson.plugins.perforce.PerforceSCM" plugin="perforce@1.3.35">
    <configVersion>2</configVersion>
    <p4User>jenkinshas</p4User>
    <p4Passwd>0f0kqlwarTrhwM5Z6nxTElYaqlJF/g==</p4Passwd>
    <p4Port>hyswp4p1.amd.com:1666</p4Port>
    <p4Client>${JOB_NAME}</p4Client>
    <projectPath>//depot/rel/r6/${DriverVersion}/drivers/dx/shared/mva_vhd/mmd/subcomponents/mcl/CL/cl.h //workspace/rel/${DriverVersion}/drivers/dx/shared/mva_vhd/mmd/subcomponents/mcl/CL/cl.h
//depot/stg/cas/apps/cas/AutomationFramework/scripts/Environ.sh //workspace/Environ
//depot/stg/cas/apps/cas/AutomationFramework/scripts/P4Update.sh //workspace/P4Update
//depot/stg/cas/apps/cas/AutomationFramework/scripts/*.bat //workspace/*.bat</projectPath>
    <projectOptions>noallwrite clobber nocompress unlocked nomodtime rmdir</projectOptions>
    <p4SysDrive></p4SysDrive>
    <p4SysRoot></p4SysRoot>
    <p4Tool>p4</p4Tool>
    <useClientSpec>false</useClientSpec>
    <useStreamDepot>false</useStreamDepot>
    <forceSync>false</forceSync>
    <alwaysForceSync>false</alwaysForceSync>
    <dontUpdateServer>false</dontUpdateServer>
    <disableAutoSync>false</disableAutoSync>
    <disableChangeLogOnly>false</disableChangeLogOnly>
    <disableSyncOnly>false</disableSyncOnly>
    <showIntegChanges>false</showIntegChanges>
    <useOldClientName>false</useOldClientName>
    <createWorkspace>true</createWorkspace>
    <updateView>true</updateView>
    <dontRenameClient>false</dontRenameClient>
    <updateCounterValue>false</updateCounterValue>
    <dontUpdateClient>false</dontUpdateClient>
    <exposeP4Passwd>true</exposeP4Passwd>
    <wipeBeforeBuild>true</wipeBeforeBuild>
    <quickCleanBeforeBuild>false</quickCleanBeforeBuild>
    <restoreChangedDeletedFiles>false</restoreChangedDeletedFiles>
    <wipeRepoBeforeBuild>true</wipeRepoBeforeBuild>
    <firstChange>0</firstChange>
    <fileLimit>0</fileLimit>
    <excludedFilesCaseSensitivity>true</excludedFilesCaseSensitivity>
    <slaveClientNameFormat>${basename}-${hash}</slaveClientNameFormat>
    <lineEndValue>local</lineEndValue>
    <useViewMask>true</useViewMask>
    <useViewMaskForPolling>true</useViewMaskForPolling>
    <useViewMaskForSyncing>false</useViewMaskForSyncing>
    <useViewMaskForChangeLog>false</useViewMaskForChangeLog>
    <pollOnlyOnMaster>false</pollOnlyOnMaster>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <customWorkspace>$CUSTOM_WORKSPACE</customWorkspace>
  <axes>
    <hudson.matrix.TextAxis>
      <name>C</name>
      <values>
        <string>rel</string>
        <string>dbg</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.TextAxis>
      <name>P</name>
      <values>
        <string>x86</string>
        <string>amd64</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.LabelAxis>
      <name>label</name>
      <values>
        <string>LBM</string>
        <string>WBM_amd64</string>
      </values>
    </hudson.matrix.LabelAxis>
  </axes>
  <builders>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.3">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.0">
        <arg1>${OSTYPE}</arg1>
        <arg2>linux</arg2>
        <ignoreCase>false</ignoreCase>
      </runCondition>
      <conditionalbuilders>
        <hudson.tasks.Shell>
          <command>#!/bin/bash

chmod -v +x ./Environ
chmod -v +x ./P4Update
</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
          <command>#!/bin/bash

ls -l /mnt/OpenCL_DK_linux/
</command>
        </hudson.tasks.Shell>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.3">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.0">
        <arg1>${OSTYPE}</arg1>
        <arg2>windows</arg2>
        <ignoreCase>true</ignoreCase>
      </runCondition>
      <conditionalbuilders>
        <hudson.tasks.BatchFile>
          <command>@echo off&#xd;
::If z: is not mapped and available build will fail and stop without checking out the full source code.&#xd;
dir z:</command>
        </hudson.tasks.BatchFile>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
    <hudson.plugins.xshell.XShellBuilder plugin="xshell@0.10">
      <commandLine>Environ</commandLine>
      <executeFromWorkingDir>true</executeFromWorkingDir>
      <regexToKill></regexToKill>
      <timeAllocated></timeAllocated>
    </hudson.plugins.xshell.XShellBuilder>
    <EnvInjectBuilder plugin="envinject@1.91.4">
      <info>
        <propertiesFilePath>${WORKSPACE}\Environ.props</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <hudson.plugins.xshell.XShellBuilder plugin="xshell@0.10">
      <commandLine>$PERL -pi.bak -e &quot;s/DriverVersion/$DriverVersion/g;&quot; &quot;$MappingFile&quot;</commandLine>
      <executeFromWorkingDir>false</executeFromWorkingDir>
      <regexToKill></regexToKill>
      <timeAllocated></timeAllocated>
    </hudson.plugins.xshell.XShellBuilder>
    <hudson.plugins.xshell.XShellBuilder plugin="xshell@0.10">
      <commandLine>P4Update ${MappingFile}</commandLine>
      <executeFromWorkingDir>true</executeFromWorkingDir>
      <regexToKill></regexToKill>
      <timeAllocated></timeAllocated>
    </hudson.plugins.xshell.XShellBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.3">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.0">
        <arg1>${OSTYPE}</arg1>
        <arg2>windows</arg2>
        <ignoreCase>true</ignoreCase>
      </runCondition>
      <conditionalbuilders>
        <hudson.tasks.BatchFile>
          <command>@echo off&#xd;
&#xd;
setlocal&#xd;
&#xd;
dir z:&#xd;
set DK_WIN7FIX2=1&#xd;
set PATH=Z:\dk\win\bin;%PATH%&#xd;
echo [INFO]PATH: %PATH%&#xd;
&#xd;
pushd rel\%DriverVersion%\stream\opencl&#xd;
	echo [INFO]Calling make %C%.%OPENCL_PLATFORM%&#xd;
	make -j %NUMBER_OF_PROCESSORS% %C%.%OPENCL_PLATFORM%&#xd;
	if ERRORLEVEL 1 (&#xd;
		echo [ERR]Could not build OpenCL&#xd;
	) else (&#xd;
		:: Archive the artifacts&#xd;
		pushd dist\windows\&#xd;
			%SEVENZ% a -t7z %WORKSPACE%\OpenCL_%PRODUCTVERSION%_%OSTYPE%_%CONFIGURATION%_%P%.%ARCHIVE_EXTENSION% -xr!*.pdb -xr!*.pub&#xd;
			%SEVENZ% a -t7z %WORKSPACE%\OpenCL_Symbols_%PRODUCTVERSION%_%OSTYPE%_%CONFIGURATION%_%P%.%ARCHIVE_EXTENSION% -ir!*.pdb -ir!*.pub&#xd;
		popd&#xd;
	)&#xd;
popd&#xd;
&#xd;
endlocal</command>
        </hudson.tasks.BatchFile>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.3">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.0">
        <arg1>${OSTYPE}</arg1>
        <arg2>linux</arg2>
        <ignoreCase>true</ignoreCase>
      </runCondition>
      <conditionalbuilders>
        <hudson.tasks.Shell>
          <command>#!/bin/bash

echo [INFO]DriverVersion: ${DriverVersion}

export PATH=/mnt/OpenCL_DK_linux/dk/lnx/bin:${PATH}
echo [INFO]PATH: ${PATH}

NUMBER_OF_PROCESSORS=$(getconf _NPROCESSORS_ONLN)
PARALLEL_COMPILATIONS=$(($NUMBER_OF_PROCESSORS*2))

pushd rel/${DriverVersion}/stream/opencl
	make ${C}.${OPENCL_PLATFORM}
    #make -j ${PARALLEL_COMPILATIONS} ${C}.${OPENCL_PLATFORM}
	Retval=$?
	if [ $Retval -eq 0 ]; then
		# build succeeded, archive the binaries
		pushd dist/linux/${CONFIGURATION}
			ARCHIVE_NAME=$WORKSPACE/OpenCL_${PRODUCTVERSION}_${OSTYPE}_${CONFIGURATION}_${P}.${ARCHIVE_EXTENSION}
			echo [INFO]Calling tar -jcvf ${ARCHIVE_NAME} ./
			tar -jcvf ${ARCHIVE_NAME} ./
			Retval=$?
			if [ $Retval -ne 0 ]; then
				echo [ERR]Could not create archive ${ARCHIVE_NAME} of the contents of the directory $WORKSPACE/dist/linux/${CONFIGURATION}
			fi
		popd
	fi
popd

exit $Retval</command>
        </hudson.tasks.Shell>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>OpenCL_*${PRODUCTVERSION}_${OSTYPE}_${CONFIGURATION}_${P}.${ARCHIVE_EXTENSION}</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.26">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <org.jenkinsci.plugins.configfiles.buildwrapper.ConfigFileBuildWrapper plugin="config-file-provider@2.9.2">
      <managedFiles>
        <org.jenkinsci.plugins.configfiles.buildwrapper.ManagedFile>
          <fileId>org.jenkinsci.plugins.configfiles.custom.CustomConfig1416898926936</fileId>
          <targetLocation>${WORKSPACE}</targetLocation>
          <variable>MappingFile</variable>
        </org.jenkinsci.plugins.configfiles.buildwrapper.ManagedFile>
      </managedFiles>
    </org.jenkinsci.plugins.configfiles.buildwrapper.ConfigFileBuildWrapper>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.7.1"/>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@1.3">
      <template>${ENV,var=&quot;PRODUCTVERSION&quot;}</template>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
  <executionStrategy class="hudson.matrix.DefaultMatrixExecutionStrategyImpl">
    <runSequentially>false</runSequentially>
    <sorter class="hudson.matrix.NoopMatrixConfigurationSorter"/>
  </executionStrategy>
</matrix-project>